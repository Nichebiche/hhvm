error: Typing[4110] Invalid return type

File class_expr_string.php, line 10, character 10 - line 10, character 12:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);
10 |   return »$gc«;
11 | }

Expected int

File class_expr_string.php, line 8, character 18 - line 8, character 20:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): »int« {
 9 |   $gc = generic_string(C::class);
10 |   return $gc;
11 | }

But got class<C>; implicitly defined constant ::class is a reference to class C

File class_expr_string.php, line 5, character 7 - line 5, character 7:

 3 | <<file:__EnableUnstableFeatures('class_type')>>
 4 | 
 5 | class »C« {}
 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);

  via this generic T

File class_expr_string.php, line 6, character 45 - line 6, character 45:

 3 | <<file:__EnableUnstableFeatures('class_type')>>
 4 | 
 5 | class C {}
 6 | function generic_string<T as string>(T $t): »T« { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);

Here's why:


  Step 1 of 2                                                                   

I started by checking this subtype relationship.

The subtype comes from this return hint

File class_expr_string.php, line 6, character 45 - line 6, character 45:

 3 | <<file:__EnableUnstableFeatures('class_type')>>
 4 | 
 5 | class C {}
 6 | function generic_string<T as string>(T $t): »T« { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);

and flows into this expression

File class_expr_string.php, line 9, character 9 - line 9, character 32:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = »generic_string(C::class)«;
10 |   return $gc;
11 | }

as the return type of the function call

which itself flows into this expression

File class_expr_string.php, line 9, character 3 - line 9, character 5:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   »$gc« = generic_string(C::class);
10 |   return $gc;
11 | }

via an assignment

which itself flows into this expression

File class_expr_string.php, line 10, character 10 - line 10, character 12:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);
10 |   return »$gc«;
11 | }

as the type of the local variable

which itself flows into this expression

File class_expr_string.php, line 10, character 3 - line 10, character 13:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);
10 |   »return $gc;«
11 | }

because it is used in a return position

The supertype comes from this hint

File class_expr_string.php, line 8, character 18 - line 8, character 20:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): »int« {
 9 |   $gc = generic_string(C::class);
10 |   return $gc;
11 | }


  Step 2 of 2                                 (here is where the error occurred) 

The subtype is a union type so next I checked the subtype constraint is satisfied for all its elements.

The subtype comes from this generic parameter T of generic_string

File class_expr_string.php, line 9, character 9 - line 9, character 22:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = »generic_string«(C::class);
10 |   return $gc;
11 | }

and flows into this hint

File class_expr_string.php, line 6, character 45 - line 6, character 45:

 3 | <<file:__EnableUnstableFeatures('class_type')>>
 4 | 
 5 | class C {}
 6 | function generic_string<T as string>(T $t): »T« { return $t; }
 7 | 
 8 | function test(): int {
 9 |   $gc = generic_string(C::class);

as the instantiation of the generic T

The supertype is the same as before.

File class_expr_string.php, line 8, character 18 - line 8, character 20:

 6 | function generic_string<T as string>(T $t): T { return $t; }
 7 | 
 8 | function test(): »int« {
 9 |   $gc = generic_string(C::class);
10 |   return $gc;
11 | }

