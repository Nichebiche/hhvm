
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#pragma once

#include <thrift/lib/python/capi/constructor.h>
#include <thrift/lib/python/capi/extractor.h>

#include <thrift/compiler/test/fixtures/python_capi/gen-cpp2/serialized_dep_types.h>

namespace test__fixtures__python_capi__serialized_dep {

struct NamespaceTag {};

} // namespace test__fixtures__python_capi__serialized_dep

namespace apache::thrift::python::capi {
template <>
struct Extractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseExtractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = false;
  ExtractorResult<::test::fixtures::python_capi::SerializedStruct> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag >>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  ExtractorResult<::test::fixtures::python_capi::SerializedStruct> operator()(PyObject* obj);
};

template <>
struct Constructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = false;
  PyObject* operator()(const ::test::fixtures::python_capi::SerializedStruct& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  PyObject* operator()(const ::test::fixtures::python_capi::SerializedStruct& val);
};

template <>
struct Extractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseExtractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = false;
  ExtractorResult<::test::fixtures::python_capi::SerializedUnion> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag >>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  ExtractorResult<::test::fixtures::python_capi::SerializedUnion> operator()(PyObject* obj);
};

template <>
struct Constructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = false;
  PyObject* operator()(const ::test::fixtures::python_capi::SerializedUnion& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  PyObject* operator()(const ::test::fixtures::python_capi::SerializedUnion& val);
};

template <>
struct Extractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseExtractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = false;
  ExtractorResult<::test::fixtures::python_capi::SerializedError> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag >>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  ExtractorResult<::test::fixtures::python_capi::SerializedError> operator()(PyObject* obj);
};

template <>
struct Constructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = false;
  PyObject* operator()(const ::test::fixtures::python_capi::SerializedError& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::SerializedError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  PyObject* operator()(const ::test::fixtures::python_capi::SerializedError& val);
};

template <>
struct Extractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseExtractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::test::fixtures::python_capi::MarshalStruct> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag >>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  ExtractorResult<::test::fixtures::python_capi::MarshalStruct> operator()(PyObject* obj);
};

template <>
struct Constructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::test::fixtures::python_capi::MarshalStruct& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalStruct, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  PyObject* operator()(const ::test::fixtures::python_capi::MarshalStruct& val);
};

template <>
struct Extractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseExtractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::test::fixtures::python_capi::MarshalUnion> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag >>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  ExtractorResult<::test::fixtures::python_capi::MarshalUnion> operator()(PyObject* obj);
};

template <>
struct Constructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::test::fixtures::python_capi::MarshalUnion& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalUnion, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  PyObject* operator()(const ::test::fixtures::python_capi::MarshalUnion& val);
};

template <>
struct Extractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseExtractor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = true;
  ExtractorResult<::test::fixtures::python_capi::MarshalError> operator()(PyObject* obj);
  int typeCheck(PyObject* obj);
};

template <>
struct Extractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag >>
    : public BaseExtractor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  ExtractorResult<::test::fixtures::python_capi::MarshalError> operator()(PyObject* obj);
};

template <>
struct Constructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::PythonNamespaced<::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  static const bool kUsingMarshal = true;
  PyObject* operator()(const ::test::fixtures::python_capi::MarshalError& val);
};

template <>
struct Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>>
    : public BaseConstructor<::apache::thrift::python::capi::ComposedStruct<
        ::test::fixtures::python_capi::MarshalError, ::test__fixtures__python_capi__serialized_dep::NamespaceTag>> {
  PyObject* operator()(const ::test::fixtures::python_capi::MarshalError& val);
};

} // namespace apache::thrift::python::capi
